import time

# to print the fucking board
def print_board(b):
    print('# 1 2 3 - x')
    for i in range(3):
        print(i+1, " ".join(b[i]))
    print('|\ny\n')
    
    time.sleep(0.25)

# to check what the player will do in his turn
def turn(player, main_board):
    stop = False
    
    print(f"player {player} turn")
    
    try:
        y, x = int(input("enter the y cordinate: ")), int(input("enter the x cordinate: "))
    except ValueError:
        print("error, please enter numbers")
        return 1
    
    if y > 0 and x > 0:
        y, x = y-1, x-1
    else:
        print("error, please enter numbers in range")
        return 1
    
    try:
        if main_board[y][x]=='-':
            if player==1:
                main_board[y][x] = 'X'
            elif player==2:
                main_board[y][x] = 'O'
        else:
            print("error, place taken")
            return 1
    except IndexError:
        print("error, please enter numbers in range")
        return 1
    
    return 0

def check_same(m):
    f = m[0]
    for i in range(1, len(m)):
        if m[i] != f:
            return False
    return True

# check the straight lines in the board
def straight_line_check(m):
    cpy = ['', '', '']
    
    for i in range(3):
        for j in range(3):
            if m[i][j]!='-':
                cpy[j] = m[i][j]
                
                if check_same(m):
                    print('e')
                    symbol = cpy[i][j]
                    if symbol=='X':
                        symbol = 1
                    elif symbol=='O':
                        symbol = 2
                    
                    return symbol
            
        for j in range(3):
            if m[j][i]!='-':
                cpy[j] = m[j][i]
                
                if check_same(m):
                    print('e')
                    symbol = cpy[j][i]
                    if symbol=='X':
                        symbol = 1
                    elif symbol=='O':
                        symbol = 2
                    
                    return symbol
    
    return 0

# check diagonal lines in the board
def diagonal_line_check(m):
    symbol = m[0][0]
    diagonal_1 = True
    for i in range(1, len(m)):
        if m[i][i] != symbol or symbol == '-':
            diagonal_1 = False
            break
    
    if symbol=='X':
        symbol = 1
    elif symbol=='O':
        symbol = 2
    
    if diagonal_1:
        return symbol
    
    symbol = m[0][len(m)-1]
    diagonal_2 = True
    for i in range(len(m)-2, -1, -1):
        if m[len(m)-i-1][i] != symbol or symbol == '-':
            diagonal_2 = False
            break
    
    if symbol=='X':
        symbol = 1
    elif symbol=='O':
        symbol = 2
    
    if diagonal_2:
        return symbol
    
    return 0

# checks if theres a tie in the game
def tie_check(m):
    for r1 in m:
        for r2 in r1:
            if r2=='-':
                return 1
    
    return 0

# check if theres a winner
def winner_check(m):
    if straight_line_check(m)!=0:
        return straight_line_check(m)
    elif diagonal_line_check(m)!=0:
        return diagonal_line_check(m)
    elif tie_check(m)==0:
        return 3
    
    return 0

# main fucking code
def main():
    
    player = 1
    
    # change the start position to test diffrent things
    main_board = [
        ['X', 'X', '-'],
        ['X', 'X', '-'],
        ['-', '-', '-']
    ]
    
    print_board(main_board)
    
    while True:
        if player==1:
            if turn(player, main_board)==1:
                player = 1
            else:
                player = 2
            
        elif player==2:
            if turn(player, main_board)==1:
                player = 2
            else:
                player = 1
        
        print_board(main_board)
        
        if winner_check(main_board)!=0 and winner_check(main_board)!=3:
            print(f"player {winner_check(main_board)} won")
            return
        elif winner_check(main_board)==3:
            print("tie")
            return
    
    return

main()
